# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: zzzzzz123
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: message-board-test
service: serverless-http-api

provider:
  name: aws
  runtime: nodejs20.x
  region: ap-southeast-2 
  environment: 
    USER_REG_TOPIC: user-registration-topic
    USERS_TABLE: Users
    BOARDS_TABLE: Boards
    AWS_ACCOUNT_ID: ${aws:accountId}
    QUEUE_NAME: BoardCreationQueue
  iamRoleStatements:
    - Effect: Allow
      Action:
        - sns:Publish
        - dynamodb:PutItem
        - dynamodb:GetItem    
      Resource:
        - arn:aws:sns:${aws:region}:${aws:accountId}:${self:provider.environment.USER_REG_TOPIC}
        - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:provider.environment.USERS_TABLE}
        - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:provider.environment.BOARDS_TABLE}



resources:
  Resources:
    usersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.USERS_TABLE}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: email
            KeyType: HASH
    boardsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.BOARDS_TABLE}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: boardId
            AttributeType: S
        KeySchema:
          - AttributeName: boardId
            KeyType: HASH

    BoardCreationQueue:
        Type: AWS::SQS::Queue
        Properties:
          QueueName: ${self:provider.environment.QUEUE_NAME}

functions:
  registerUser:
    handler: src/registerUser.handler
    events:
      - httpApi:
          method: POST
          path: /register
  handleUserRegistration:
    handler: src/handleUserRegistration.handler
    events: 
      - sns: 
          arn: arn:aws:sns:${aws:region}:${aws:accountId}:${self:provider.environment.USER_REG_TOPIC}
  getUserByEmail:
    handler: src/getUserByEmail.handler
    events:
      - httpApi:
          method: GET
          path: /user/{email}


  listBoards:
    handler: src/listBoards.handler
    events:
      - httpApi:
          method: GET
          path: /boards
  postBoards:
    handler: src/postBoards.handler
    events:
      - httpApi:
          method: POST
          path: /boards
  handleBoardCreation:
    handler: src/handleBoardCreation.handler
    events:
      - sqs:
          arn: 
            Fn::GetAtt:
              - BoardCreationQueue
              - Arn
